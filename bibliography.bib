
@misc{koks_logger_2023,
	title = {Logger},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Infrastructure/Logging/Logger.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_pantharheigeneratordomain_2023,
	title = {{PanthaRheiGeneratorDomain}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/tree/master-thesis-artifact/Generator/src/PanthaRhei.Generator.Domain},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_postprocessorinteractor_2023,
	title = {{PostProcessorInteractor}},
	copyright = {GPL-3.0},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Interactors/Generators/PostProcessors/PostProcessorInteractor.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_preprocessorinteractor_2023,
	title = {{PreProcessorInteractor}},
	copyright = {GPL-3.0},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Interactors/Generators/Preprocessors/PreProcessorInteractor.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_regionharvesterinteractor_2023,
	title = {{RegionHarvesterInteractor}},
	copyright = {GPL-3.0},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Interactors/Generators/Harvesters/RegionHarvesterInteractor.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_regionrejuvenatorinteractor_2023,
	title = {{RegionRejuvenatorInteractor}},
	copyright = {GPL-3.0},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Interactors/Generators/Rejuvenator/RegionRejuvenatorInteractor.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_component_2023,
	title = {The {Component} {Entity}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Entities/Component.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_generator_2023,
	title = {The {Generator} {Console}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Presentation.Cli/Program.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_code_nodate,
	title = {Code {Generator}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/tree/research/Generator/src},
	urldate = {2023-03-25},
	author = {Koks, Gerco},
	keywords = {artifact},
}

@misc{koks_clean_nodate,
	title = {Clean {Architecture} {Expander}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/tree/research/Expanders/src/PanthaRhei.Expanders.CleanArchitecture},
	urldate = {2023-03-25},
	author = {Koks, Gerco},
	keywords = {artifact},
}

@inproceedings{wijers1989analyzing,
	title = {Analyzing the structure of {IS} methodologies, an alternative approach {In}},
	booktitle = {Proceedings of the first dutch conference on information systems},
	author = {Wijers, GM and Seligman, PS and Sol, HG},
	year = {1989},
	keywords = {bib},
}

@misc{github_archunitnet_2023,
	title = {{ArchUnitNET}},
	url = {https://github.com/TNG/ArchUnitNET},
	publisher = {TNG Technology Consulting GmbH},
	author = {Github},
	year = {2023},
	keywords = {web},
}

@misc{koks_installation_2023,
	title = {Installation {Instructions} {Pantha} {Rhei}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/wiki/Home},
	language = {en},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
	file = {Snapshot:C\:\\Users\\gerco\\Zotero\\storage\\K4ZYXHHL\\wiki.html:text/html},
}

@misc{koks_createentityboundary_2023,
	title = {{CreateEntityBoundary}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/master-thesis-artifact/PanthaRhei.Output/Output/6c6984a1-c87a-429b-b91f-2a976adb3c0e/LiquidVisions.PanthaRhei.Generated/src/Application/Boundaries/Entities/CreateEntityBoundary.cs},
	urldate = {2023-05-07},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_entitycontroller_2023,
	title = {{EntityController}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/master-thesis-artifact/PanthaRhei.Output/Output/6c6984a1-c87a-429b-b91f-2a976adb3c0e/LiquidVisions.PanthaRhei.Generated/src/Presentation.Api/Controllers/EntityControllers.cs},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@article{bliekendaal_rene_towards_2022,
	title = {Towards an {Antifragile} {Public} {Sector}},
	copyright = {Creative Commons Attribution 4.0 International, Open Access},
	url = {https://zenodo.org/record/6862568},
	doi = {10.5281/ZENODO.6862568},
	abstract = {The Greek philosopher Heraclitus once said that one constant since the beginning of time is change. Nothing in life is permanent, nor can it be, because the very nature of existence is change. The Dutch public sector deals with many changes in its environment. Changes follow one another at lightning speed. The Dutch public sector uses Enterprise Architecture to accompany change. In recent years, the environment placed new and increasingly compelling demands on the functioning of public organisations. A responsive and adaptive government is needed to deal with this. We must create public organisations that can cope with or even seize opportunities in a dynamic, complex, unpredictable environment. The Dutch public sector proposed to use antifragile to deal with disruptive change. However, how can the Dutch public sector achieve antifragility with the support of Enterprise Architecture? Hence, the research question of this thesis is: ’What are the success factors of Enterprise Architecture and antifragile that positively influence the contribution of Enterprise Architecture in achieving antifragility in the Dutch public sector?’ We can conclude that there are fourteen potential success factors. We used triangulation to determine these success factors. We performed literature research and used semi-structured interviews with four CxOs of the Dutch public sector for validation and data collection. An expert group of ten Dutch public sector enterprise architects validated the final results.},
	language = {en},
	urldate = {2023-05-07},
	author = {Bliekendaal, René},
	collaborator = {Mulder, Hans and Botjes, Edzo A.},
	month = jul,
	year = {2022},
	note = {Publisher: Zenodo
Version Number: 1.0.1},
	keywords = {Agile, Agility, Antifragile, Antifragility, Co-evolution, Dutch public sector, Enterprise architecture, Public sector, Resiliency, Resilient, Robust, Robustness, Success factors, System-in-environment, System-of-systems},
	annote = {Other
A thesis submitted in fulfilment of the requirements for the degree of Master of Enterprise IT Architecture (MSc)},
	file = {Bliekendaal, René - 2022 - Towards an Antifragile Public Sector.pdf:C\:\\Users\\gerco\\Zotero\\storage\\3UC5CJWH\\Bliekendaal, René - 2022 - Towards an Antifragile Public Sector.pdf:application/pdf},
}

@book{dietz_enterprise_2020,
	address = {Cham, Switzerland},
	series = {The enterprise engineering series},
	title = {Enterprise ontology: a human-centric approach to understanding the essence of organisation},
	isbn = {978-3-030-38854-6 978-3-030-38856-0},
	shorttitle = {Enterprise ontology},
	language = {eng},
	publisher = {Springer International Publishing},
	author = {Dietz, Jan L. G. and Mulder, Hans B. F.},
	year = {2020},
	doi = {10.1007/978-3-030-38854-6},
	keywords = {bib},
	file = {Full Text:C\:\\Users\\gerco\\Zotero\\storage\\6CSZFH9G\\Dietz and Mulder - 2020 - Enterprise ontology a human-centric approach to u.pdf:application/pdf},
}

@misc{koks_createentitypresenter_2023,
	title = {{CreateEntityPresenter}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/master-thesis-artifact/PanthaRhei.Output/Output/6c6984a1-c87a-429b-b91f-2a976adb3c0e/LiquidVisions.PanthaRhei.Generated/src/Presentation.Api/Presenters/Entities/CreateEntityPresenter.cs},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_deleteentityrequestmodel_2023,
	title = {{DeleteEntityRequestModel}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/master-thesis-artifact/PanthaRhei.Output/Output/6c6984a1-c87a-429b-b91f-2a976adb3c0e/LiquidVisions.PanthaRhei.Generated/src/Application/RequestModels/Entities/DeleteEntityRequestModel.cs},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_createentityinteractor_2023,
	title = {{CreateEntityInteractor}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/master-thesis-artifact/PanthaRhei.Output/Output/6c6984a1-c87a-429b-b91f-2a976adb3c0e/LiquidVisions.PanthaRhei.Generated/src/Application/Interactors/Entities/CreateEntityInteractor.cs},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_createentityvalidator_2023,
	title = {{CreateEntityValidator}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/master-thesis-artifact/PanthaRhei.Output/Output/6c6984a1-c87a-429b-b91f-2a976adb3c0e/LiquidVisions.PanthaRhei.Generated/src/Application/Validators/Entities/CreateEntityValidator.cs},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_interactor_2023,
	title = {Interactor},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/master-thesis-artifact/PanthaRhei.Output/Output/6c6984a1-c87a-429b-b91f-2a976adb3c0e/LiquidVisions.PanthaRhei.Generated/src/Application/Interactors/Entities/CreateEntityInteractor.cs},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_entity_2023,
	title = {Entity},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/master-thesis-artifact/PanthaRhei.Output/Output/6c6984a1-c87a-429b-b91f-2a976adb3c0e/LiquidVisions.PanthaRhei.Generated/src/Domain/Entities/Entity.cs},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_dependencymanagerinteractor_2023,
	title = {{DependencyManagerInteractor}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/master-thesis-artifact/Generator/src/PanthaRhei.Generator.Domain/Interactors/Dependencies/DependencyManagerInteractor.cs},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_idependencyfactoryinteractor_2023,
	title = {{IDependencyFactoryInteractor}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/master-thesis-artifact/Generator/src/PanthaRhei.Generator.Domain/Interactors/Dependencies/IDependencyFactoryInteractor.cs},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_idependencymanagerinteractor_2023,
	title = {{IDependencyManagerInteractor}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/master-thesis-artifact/Generator/src/PanthaRhei.Generator.Domain/Interactors/Dependencies/IDependencyManagerInteractor.cs},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{wikipedia_service_2023,
	title = {Service locator pattern},
	url = {https://en.wikipedia.org/w/index.php?title=Service_locator_pattern&oldid=1152702717},
	abstract = {The service locator pattern is a design pattern used in software development to encapsulate the processes involved in obtaining a service with a strong abstraction layer. This pattern uses a central registry known as the "service locator", which on request returns the information necessary to perform a certain task. Proponents of the pattern say the approach simplifies component-based applications where all dependencies are cleanly listed at the beginning of the whole application design, consequently making traditional dependency injection a more complex way of connecting objects. Critics of the pattern argue that it is an anti-pattern which obscures dependencies and makes software harder to test.},
	language = {en},
	journal = {Wikipedia},
	author = {Wikipedia},
	year = {2023},
	keywords = {web},
}

@misc{koks_dependencyinjectionextension_2023,
	title = {{DependencyInjectionExtension}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/master-thesis-artifact/Generator/src/PanthaRhei.Generator.Application/DependencyInjectionExtension.cs},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_layers_2023,
	title = {Layers of the {CodeGenerator}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/tree/master-thesis-artifact/Generator/src},
	language = {en},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_scribantemplateinteractor_2023,
	title = {{ScribanTemplateInteractor}},
	copyright = {GPL-3.0},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Application/Interactors/Templates/ScribanTemplateInteractor.cs},
	publisher = {LiquidVisions},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{github_scriban_2023,
	title = {scriban},
	copyright = {BSD-2-Clause},
	url = {https://github.com/scriban/scriban},
	abstract = {A fast, powerful, safe and lightweight scripting language and engine for .NET},
	publisher = {scriban},
	author = {Github},
	year = {2023},
	keywords = {web},
}

@misc{koks_itemplateinteractor_2023,
	title = {{ITemplateInteractor}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Interactors/Templates/ITemplateInteractor.cs#L6},
	urldate = {2023-05-05},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{oas_versioning_2023,
	title = {Versioning an {API}},
	url = {https://cloud.google.com/endpoints/docs/openapi/versioning-an-api},
	language = {en},
	urldate = {2023-05-05},
	journal = {Google Cloud},
	author = {OAS},
	year = {2023},
	keywords = {web},
	file = {Snapshot:C\:\\Users\\gerco\\Zotero\\storage\\LSZD75SX\\versioning-an-api.html:text/html},
}

@misc{github_aspnet-api-versioningprogramcs_2023,
	title = {aspnet-api-versioning/{Program}.cs at main · dotnet/aspnet-api-versioning},
	url = {https://github.com/dotnet/aspnet-api-versioning/blob/main/examples/AspNetCore/WebApi/MinimalApiExample/Program.cs},
	urldate = {2023-05-05},
	author = {Github},
	year = {2023},
	keywords = {web},
	file = {aspnet-api-versioning/Program.cs at main · dotnet/aspnet-api-versioning:C\:\\Users\\gerco\\Zotero\\storage\\8LGK4F85\\Program.html:text/html},
}

@inproceedings{oorts_building_2014,
	address = {Waikoloa, HI},
	title = {Building {Evolvable} {Software} {Using} {Normalized} {Systems} {Theory}: {A} {Case} {Study}},
	isbn = {978-1-4799-2504-9},
	shorttitle = {Building {Evolvable} {Software} {Using} {Normalized} {Systems} {Theory}},
	url = {http://ieeexplore.ieee.org/document/6759187/},
	doi = {10.1109/HICSS.2014.585},
	urldate = {2022-07-05},
	booktitle = {2014 47th {Hawaii} {International} {Conference} on {System} {Sciences}},
	publisher = {IEEE},
	author = {Oorts, Gilles and Huysmans, Philip and De Bruyn, Peter and Mannaert, Herwig and Verelst, Jan and Oost, Arco},
	month = jan,
	year = {2014},
	keywords = {bib},
	pages = {4760--4769},
	file = {Oorts et al. - 2014 - Building Evolvable Software Using Normalized Syste.pdf:C\:\\Users\\gerco\\Zotero\\storage\\M8AC27HM\\Oorts et al. - 2014 - Building Evolvable Software Using Normalized Syste.pdf:application/pdf},
}

@article{huysmans_positioning_nodate,
	title = {Positioning the {Normalized} {Systems} {Theory} in a {Design} {Theory} {Framework}},
	abstract = {Several frameworks have been proposed to deﬁne design science and design theory. For this reason, positioning a research stream within both paradigms has become a difﬁcult exercise. In this paper, the Normalized Systems (NS) theory is positioned within design science and design theory, in particular the design theory framework formulated by Gregor \& Jones (2007). Normalized Systems theory has been proposed as a way to cope with the ever increasingly agile environment to which organizations and their software applications need to adapt. The results of positioning NS within the presented framework for design theories show that NS almost fully incorporates all components of the design theory anatomy. The application of NS theory to other ﬁelds is also discussed. By positioning Normalized System theory within design science and design theory, we also believe to contribute to the deﬁnition of both ﬁelds in this paper.},
	language = {en},
	author = {Huysmans, Philip and Oorts, Gilles and Bruyn, Peter De and Mannaert, Herwig and Verelst, Jan},
	keywords = {bib},
	pages = {21},
	file = {Huysmans et al. - Positioning the Normalized Systems Theory in a Des.pdf:C\:\\Users\\gerco\\Zotero\\storage\\4ZTN7SII\\Huysmans et al. - Positioning the Normalized Systems Theory in a Des.pdf:application/pdf},
}

@misc{noauthor_clean_nodate,
	title = {Clean {Coder} {Blog}},
	url = {https://blog.cleancoder.com/uncle-bob/2014/05/08/SingleReponsibilityPrinciple.html},
	urldate = {2022-12-28},
	keywords = {web},
	file = {Clean Coder Blog:C\:\\Users\\gerco\\Zotero\\storage\\D4PBA3D3\\SingleReponsibilityPrinciple.html:text/html},
}

@misc{gc_viewmodels_2023,
	title = {{ViewModels}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/tree/master-thesis-artifact/PanthaRhei.Output/Output/6c6984a1-c87a-429b-b91f-2a976adb3c0e/LiquidVisions.PanthaRhei.Generated/src/Presentation.Api/ViewModels},
	urldate = {2023-05-05},
	author = {GC, Koks},
	year = {2023},
	keywords = {artifact},
	file = {LiquidVisions.PanthaRhei/PanthaRhei.Output/Output/6c6984a1-c87a-429b-b91f-2a976adb3c0e/LiquidVisions.PanthaRhei.Generated/src/Presentation.Api/ViewModels at master-thesis-artifact · LiquidVisions/LiquidVisions.PanthaRhei:C\:\\Users\\gerco\\Zotero\\storage\\8Z9K37UU\\ViewModels.html:text/html},
}

@article{d_mcilroy_nato_1968,
	title = {{NATO} {Software} {Engineering} {Conference}},
	language = {en},
	author = {{D. McIlroy}},
	year = {1968},
	keywords = {bib},
	file = {McClure - 1968 - NATO SOFTWARE ENGINEERING CONFERENCE 1968.PDF:C\:\\Users\\gerco\\Zotero\\storage\\2FZLPW2I\\McClure - 1968 - NATO SOFTWARE ENGINEERING CONFERENCE 1968.PDF:application/pdf},
}

@article{parnas_criteria_1972,
	title = {On the criteria to be used in decomposing systems into modules},
	volume = {15},
	issn = {0001-0782, 1557-7317},
	doi = {10.1145/361598.361623},
	abstract = {This paper discusses modularization as a mechanism for improving the flexibility and comprehensibility of a system while allowing the shortening of its development time. The effectiveness of a “modularization” is dependent upon the criteria used in dividing the system into modules. A system design problem is presented and both a conventional and unconventional decomposition are described. It is shown that the unconventional decompositions have distinct advantages for the goals outlined. The criteria used in arriving at the decompositions are discussed. The unconventional decomposition, if implemented with the conventional assumption that a module consists of one or more subroutines, will be less efficient in most cases. An alternative approach to implementation which does not have this effect is sketched.},
	language = {en},
	number = {12},
	urldate = {2023-03-19},
	journal = {Communications of the ACM},
	author = {Parnas, DL.},
	month = dec,
	year = {1972},
	keywords = {bib},
	pages = {1053--1058},
	file = {Full Text:C\:\\Users\\gerco\\Zotero\\storage\\E5KWMPEA\\Parnas - 1972 - On the criteria to be used in decomposing systems .pdf:application/pdf},
}

@article{dijkstra_letters_1968,
	title = {Letters to the editor: go to statement considered harmful},
	volume = {11},
	issn = {0001-0782, 1557-7317},
	shorttitle = {Letters to the editor},
	doi = {10.1145/362929.362947},
	language = {en},
	number = {3},
	journal = {Communications of the ACM},
	author = {Dijkstra, E},
	month = mar,
	year = {1968},
	keywords = {bib},
	pages = {147--148},
	file = {Full Text:C\:\\Users\\gerco\\Zotero\\storage\\Q5VIFHFF\\Dijkstra - 1968 - Letters to the editor go to statement considered .pdf:application/pdf},
}

@article{lehman_programs_1980,
	title = {Programs, life cycles, and laws of software evolution},
	volume = {68},
	issn = {0018-9219},
	doi = {10.1109/PROC.1980.11805},
	number = {9},
	journal = {Proceedings of the IEEE},
	author = {Lehman, M.M.},
	year = {1980},
	keywords = {bib},
	pages = {1060--1076},
	file = {Lehman - 1980 - Programs, life cycles, and laws of software evolut.pdf:C\:\\Users\\gerco\\Zotero\\storage\\KXYZEMV7\\Lehman - 1980 - Programs, life cycles, and laws of software evolut.pdf:application/pdf},
}

@book{dijkstra_selected_1982,
	address = {New York},
	series = {Texts and monographs in computer science},
	title = {Selected writings on computing: a personal perspective},
	isbn = {978-0-387-90652-2},
	shorttitle = {Selected writings on computing},
	publisher = {Springer-Verlag},
	author = {Dijkstra, E},
	year = {1982},
	keywords = {bib},
}

@book{meyer_object-oriented_1988,
	address = {Upper Saddle River, N.J},
	edition = {1st ed},
	title = {Object-oriented software construction},
	isbn = {978-0-13-629155-8},
	publisher = {Prentice Hall PTR},
	author = {Meyer, Bertrand},
	year = {1988},
	keywords = {bib},
	file = {Meyer - Object-Oriented Software Construction.pdf:C\:\\Users\\gerco\\Zotero\\storage\\RBARZ7IA\\Meyer - Object-Oriented Software Construction.pdf:application/pdf},
}

@book{jacobson_object-oriented_1992,
	address = {[New York] : Wokingham, Eng. ; Reading, Mass},
	title = {Object-oriented software engineering: a use case driven approach},
	isbn = {978-0-201-54435-0},
	shorttitle = {Object-oriented software engineering},
	publisher = {ACM Press ; Addison-Wesley Pub},
	author = {Jacobson, Ivar},
	year = {1992},
	keywords = {bib},
}

@book{neumann_strategic_1994,
	address = {New York : Toronto : New York},
	title = {Strategic information systems: competition through information technologies},
	isbn = {978-0-02-386690-6},
	shorttitle = {Strategic information systems},
	publisher = {Macmillan College Publishing Co. ; Maxwell Macmillan Canada ; Maxwell Macmillan International},
	author = {Neumann, Seev},
	year = {1994},
	keywords = {bib},
}

@incollection{Parnas2001,
	address = {Berlin, Heidelberg},
	title = {On the criteria to be used in decomposing systems into modules},
	isbn = {978-3-642-48354-7},
	abstract = {This paper discusses modularization as a mechanism for improving the flexibility and comprehensibility of a system while allowing the shortening of its development time. The effectiveness of a “modularization” is dependent upon the criteria used in dividing the system into modules. A system design problem is presented and both a conventional and unconventional decomposition are described. It is shown that the unconventional decompositions have distinct advantages for the goals outlined. The criteria used in arriving at the decompositions are discussed. The unconventional decomposition, if implemented with the conventional assumption that a module consists of one or more subroutines, will be less efficient in most cases. An alternative approach to implementation which does not have this effect is sketched.},
	booktitle = {Pioneers and their contributions to software engineering: sd\&m conference on software pioneers, bonn, june 28/29, 2001, original historic contributions},
	publisher = {Springer Berlin Heidelberg},
	author = {Parnas, David L.},
	editor = {Broy, Manfred and Denert, Ernst},
	year = {2001},
	doi = {10.1007/978-3-642-48354-7_20},
	keywords = {bib},
	pages = {479--498},
}

@article{horning_software_2001,
	title = {Software fundamentals: collected papers by {David} {L}. {Parnas}},
	volume = {26},
	issn = {0163-5948},
	shorttitle = {Software fundamentals},
	doi = {10.1145/505482.505498},
	language = {en},
	number = {4},
	urldate = {2023-03-19},
	journal = {ACM SIGSOFT Software Engineering Notes},
	author = {Horning, Jim},
	month = jul,
	year = {2001},
	keywords = {bib},
	pages = {91--91},
}

@book{martin_agile_2003,
	address = {Upper Saddle River, N.J},
	series = {Alan {Apt} series},
	title = {Agile software development: principles, patterns, and practices},
	isbn = {978-0-13-597444-5},
	shorttitle = {Agile software development},
	publisher = {Prentice Hall},
	author = {Martin, Robert C.},
	year = {2003},
	keywords = {bib},
}

@article{hevner_design_2004,
	title = {Design {Science} in {Information} {Systems} {Research}},
	language = {en},
	author = {Hevner, Alan R and March, Salvatore T and Park, Jinsoo and Ram, Sudha},
	year = {2004},
	keywords = {bib},
	file = {Hevner et al. - Design Science in Information Systems Research.pdf:C\:\\Users\\gerco\\Zotero\\storage\\9B6VWRMG\\Hevner et al. - Design Science in Information Systems Research.pdf:application/pdf},
}

@article{peffers_design_2007,
	title = {A {Design} {Science} {Research} {Methodology} for {Information} {Systems} {Research}},
	volume = {24},
	issn = {0742-1222, 1557-928X},
	url = {https://www.tandfonline.com/doi/full/10.2753/MIS0742-1222240302},
	doi = {10.2753/MIS0742-1222240302},
	abstract = {The paper motivates, presents, demonstrates in use, and evaluates a methodology for conducting design science (DS) research in information systems (IS). DS is of importance in a discipline oriented to the creation of successful artifacts. Several researchers have pioneered DS research in IS, yet over the past 15 years, little DS research has been done within the discipline. The lack of a methodology to serve as a commonly accepted framework for DS research and of a template for its presentation may have contributed to its slow adoption. The design science research methodology (DSRM) presented here incorporates principles, practices, and procedures required to carry out such research and meets three objectives: it is consistent with prior literature, it provides a nominal process model for doing DS research, and it provides a mental model for presenting and evaluating DS research in IS. The DS process includes six steps: problem identiﬁcation and motivation, deﬁnition of the objectives for a solution, design and development, demonstration, evaluation, and communication. We demonstrate and evaluate the methodology by presenting four case studies in terms of the DSRM, including cases that present the design of a database to support health assessment methods, a software reuse measure, an Internet video telephony application, and an IS planning method. The designed methodology effectively satisﬁes the three objectives and has the potential to help aid the acceptance of DS research in the IS discipline.},
	language = {en},
	number = {3},
	urldate = {2022-06-26},
	journal = {Journal of Management Information Systems},
	author = {Peffers, Ken and Tuunanen, Tuure and Rothenberger, Marcus A. and Chatterjee, Samir},
	month = dec,
	year = {2007},
	keywords = {bib},
	pages = {45--77},
	file = {Peffers et al. - 2007 - A Design Science Research Methodology for Informat.pdf:C\:\\Users\\gerco\\Zotero\\storage\\4IRHMKJ8\\Peffers et al. - 2007 - A Design Science Research Methodology for Informat.pdf:application/pdf},
}

@book{mannaert_normalized_2009,
	address = {Kermt},
	title = {Normalized systems re-creating information technology based on laws for software evolvability},
	isbn = {978-90-77160-00-8},
	language = {English},
	publisher = {Koppa},
	author = {Mannaert, Herwig and Verelst, Jan},
	year = {2009},
	note = {OCLC: 1073467550},
	keywords = {bib},
	file = {Mannaert and Verelst - 2009 - Normalized systems re-creating information technol.pdf:C\:\\Users\\gerco\\Zotero\\storage\\AL8TQPIL\\Mannaert and Verelst - 2009 - Normalized systems re-creating information technol.pdf:application/pdf},
}

@inproceedings{breivold_systematic_2010,
	title = {A {Systematic} {Review} on {Architecting} for {Software} {Evolvability}},
	doi = {10.1109/ASWEC.2010.11},
	abstract = {For long-lived systems, there is a need to address evolvability (i.e. a system's ability to easily accommodate changes) explicitly during the entire lifecycle. In this paper, we undertake a systematic review to obtain an overview of the existing studies in promoting software evolvability at architectural level. The search strategy identified 58 studies that were catalogued as primary studies for this review after using multi-step selection process. The studies are classified into five main categories of themes, including techniques that support quality considerations during software architecture design, architectural quality evaluation, economic valuation, architectural knowledge management and modeling techniques. The review investigates what is currently known about architecting software evolvability at architecture level. Implications for research and practice are presented.},
	booktitle = {2010 21st {Australian} {Software} {Engineering} {Conference}},
	author = {Breivold, Hongyu Pei and Crnkovic, Ivica},
	month = apr,
	year = {2010},
	note = {ISSN: 2377-5408},
	keywords = {bib, Australia, Computer architecture, Computer industry, Costs, Data mining, Guidelines, Protocols, Software architecture, software architecture evolution, Software engineering, Software evolvability, Software systems},
	pages = {13--22},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\gerco\\Zotero\\storage\\YPLXYYRP\\5475056.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\gerco\\Zotero\\storage\\EJ3LCLQ3\\Breivold and Crnkovic - 2010 - A Systematic Review on Architecting for Software E.pdf:application/pdf},
}

@book{huysmans_feasibility_2011,
	title = {On the feasibility of normalized enterprises applying normalized systems theory to the high-level design of enterprises: proefschrift},
	isbn = {978-90-8994-046-9},
	shorttitle = {On the feasibility of normalized enterprises applying normalized systems theory to the high-level design of enterprises},
	language = {eng},
	author = {Huysmans, Philip},
	year = {2011},
	note = {OCLC: 901625166},
	keywords = {bib},
}

@book{mora_research_2012,
	title = {Research {Methodologies}, {Innovations} and {Philosophies} in {Software} {Systems} {Engineering} and {Information} {Systems}:},
	isbn = {978-1-4666-0179-6 978-1-4666-0180-2},
	shorttitle = {Research {Methodologies}, {Innovations} and {Philosophies} in {Software} {Systems} {Engineering} and {Information} {Systems}},
	url = {http://services.igi-global.com/resolvedoi/resolve.aspx?doi=10.4018/978-1-4666-0179-6},
	urldate = {2022-06-27},
	publisher = {IGI Global},
	editor = {Mora, Manuel and Gelman, Ovsei and Steenkamp, Annette L. and Raisinghani, Mahesh},
	year = {2012},
	doi = {10.4018/978-1-4666-0179-6},
	keywords = {bib},
	file = {Accepted Version:C\:\\Users\\gerco\\Zotero\\storage\\RQXEH5CG\\Mora et al. - 2012 - Research Methodologies, Innovations and Philosophi.pdf:application/pdf},
}

@article{mannaert_towards_2012,
	title = {Towards evolvable software architectures based on systems theoretic stability},
	volume = {42},
	issn = {00380644},
	doi = {10.1002/spe.1051},
	language = {en},
	number = {1},
	journal = {Software: Practice and Experience},
	author = {Mannaert, Herwig and Verelst, Jan and Ven, Kris},
	month = jan,
	year = {2012},
	keywords = {bib},
	pages = {89--116},
	file = {Mannaert et al. - 2012 - Towards evolvable software architectures based on .pdf:C\:\\Users\\gerco\\Zotero\\storage\\UI6ZJAMK\\Mannaert et al. - 2012 - Towards evolvable software architectures based on .pdf:application/pdf},
}

@incollection{huysmans_towards_2013,
	address = {Cham},
	title = {Towards an {Engineering}-{Based} {Research} {Approach} for {Enterprise} {Architecture}: {Lessons} {Learned} from {Normalized} {Systems} {Theory}},
	volume = {8827},
	isbn = {978-3-319-12567-1 978-3-319-12568-8},
	shorttitle = {Towards an {Engineering}-{Based} {Research} {Approach} for {Enterprise} {Architecture}},
	abstract = {The emerging ﬁeld of enterprise engineering provides a promising outlook for positioning relevant research. Enterprise Architecture frameworks which are frequently used in practice, but are often criticized from a research perspective, can be positioned in this ﬁeld. The challenge for the enterprise engineering ﬁeld is to provide a framework to improve such frameworks using a rigorous scientiﬁc approach. This paper aims to contribute to addressing this challenge by proposing components for a research framework which focuses on applying engineering insights to enterprise architecture. It ﬁrst explores how current enterprise architecture frameworks handle issues relevant for engineering (i.e., complexity, change and integration). It then introduces additional components which could contribute towards a more systematic approach. These components are derived from the way the Normalized Systems Theory was developed, and successfully introduced engineering standards into the design software architecture.},
	language = {en},
	booktitle = {Progress in {Pattern} {Recognition}, {Image} {Analysis}, {Computer} {Vision}, and {Applications}},
	publisher = {Springer International Publishing},
	author = {Huysmans, Philip and Verelst, J},
	year = {2013},
	doi = {10.1007/978-3-642-38490-5_5},
	note = {Series Title: Lecture Notes in Computer Science},
	keywords = {bib},
	pages = {58--72},
	file = {Huysmans and Verelst - 2013 - Towards an Engineering-Based Research Approach for.pdf:C\:\\Users\\gerco\\Zotero\\storage\\DAT34VIS\\Huysmans and Verelst - 2013 - Towards an Engineering-Based Research Approach for.pdf:application/pdf},
}

@book{recker_scientific_2013,
	address = {Berlin, Heidelberg},
	title = {Scientific {Research} in {Information} {Systems}},
	isbn = {978-3-642-30047-9 978-3-642-30048-6},
	url = {http://link.springer.com/10.1007/978-3-642-30048-6},
	language = {en},
	urldate = {2022-04-30},
	publisher = {Springer Berlin Heidelberg},
	author = {Recker, Jan},
	year = {2013},
	doi = {10.1007/978-3-642-30048-6},
	keywords = {bib},
	file = {Recker - 2013 - Scientific Research in Information Systems.pdf:C\:\\Users\\gerco\\Zotero\\storage\\XYF7DTW8\\Recker - 2013 - Scientific Research in Information Systems.pdf:application/pdf},
}

@article{the_australian_national_university_positioning_2013,
	title = {Positioning and {Presenting} {Design} {Science} {Research} for {Maximum} {Impact}},
	volume = {37},
	issn = {02767783, 21629730},
	url = {https://misq.org/positioning-and-presenting-design-science-research-for-maximum-impact.html},
	doi = {10.25300/MISQ/2013/37.2.01},
	language = {en},
	number = {2},
	urldate = {2022-06-26},
	journal = {MIS Quarterly},
	author = {{The Australian National University} and Gregor, Shirley and Hevner, Alan R. and {University of South Florida}},
	month = feb,
	year = {2013},
	keywords = {bib},
	pages = {337--355},
	file = {The Australian National University et al. - 2013 - Positioning and Presenting Design Science Research.pdf:C\:\\Users\\gerco\\Zotero\\storage\\Q84CLDXC\\The Australian National University et al. - 2013 - Positioning and Presenting Design Science Research.pdf:application/pdf},
}

@book{bruyn_generalizing_2014,
	title = {Generalizing normalized systems theory towards a foundational theory for enterprice engineering: proefschrift},
	isbn = {978-90-8994-111-4},
	shorttitle = {Generalizing normalized systems theory towards a foundational theory for enterprice engineering},
	language = {eng},
	author = {Bruyn, Peter De},
	year = {2014},
	note = {OCLC: 901639554},
	keywords = {bib},
}

@book{johannesson_introduction_2014,
	address = {Cham},
	title = {An {Introduction} to {Design} {Science}},
	isbn = {978-3-319-10631-1 978-3-319-10632-8},
	url = {http://link.springer.com/10.1007/978-3-319-10632-8},
	language = {en},
	urldate = {2022-04-30},
	publisher = {Springer International Publishing},
	author = {Johannesson, Paul and Perjons, Erik},
	year = {2014},
	doi = {10.1007/978-3-319-10632-8},
	keywords = {bib},
	file = {Johannesson and Perjons - 2014 - An Introduction to Design Science.pdf:C\:\\Users\\gerco\\Zotero\\storage\\554XHT5M\\Johannesson and Perjons - 2014 - An Introduction to Design Science.pdf:application/pdf},
}

@book{wieringa_design_2014,
	address = {Berlin, Heidelberg},
	title = {Design {Science} {Methodology} for {Information} {Systems} and {Software} {Engineering}},
	isbn = {978-3-662-43838-1 978-3-662-43839-8},
	url = {https://link.springer.com/10.1007/978-3-662-43839-8},
	language = {en},
	urldate = {2023-04-19},
	publisher = {Springer Berlin Heidelberg},
	author = {Wieringa, Roel J.},
	year = {2014},
	doi = {10.1007/978-3-662-43839-8},
	keywords = {bib},
	file = {Wieringa - 2014 - Design Science Methodology for Information Systems.pdf:C\:\\Users\\gerco\\Zotero\\storage\\B78CLE8C\\Wieringa - 2014 - Design Science Methodology for Information Systems.pdf:application/pdf},
}

@article{2024_SIM_key_issues_and_trends,
	title = {The 2014 {SIM} {IT} key issues and trends study: {Appendix}},
	volume = {13},
	issn = {1540-1960},
	language = {english},
	number = {4},
	journal = {MIS QUARTERLY EXECUTIVE},
	author = {Kappelman, Leon and McLean, Ephraim and Johnson, Vess and Gerhart, Natalie},
	month = dec,
	year = {2014},
	note = {Place: KELLEY SCH BUS, E 10 ST, BLOOMINGTON, IN 47405-1701 USA
Publisher: INDIANA UNIV, OPER \& DECISION TECHNOL DEPT
Type: Article
tex.affiliation: Kappelman, L (Corresponding Author), Univ N Texas, Denton, TX 76203 USA. Kappelman, Leon; Gerhart, Natalie, Univ N Texas, Denton, TX 76203 USA. McLean, Ephraim, Georgia State Univ, Atlanta, GA 30303 USA. Johnson, Vess, Univ Incarnate Word, San Antonio, TX USA.
tex.da: 2022-04-27
tex.doc-delivery-number: AW2YO
tex.eissn: 1540-1979
tex.journal-iso: MIS Q. Exec.
tex.number-of-cited-references: 0
tex.research-areas: Information Science \& Library Science; Business \& Economics
tex.researcherid-numbers: Johnson, Vess/ABC-9133-2020
tex.times-cited: 56
tex.unique-id: WOS:000346152700004
tex.usage-count-last-180-days: 1
tex.usage-count-since-2013: 6
tex.web-of-science-categories: Information Science \& Library Science; Management
tex.web-of-science-index: Social Science Citation Index (SSCI)},
	keywords = {bib},
	file = {The_2014_SIM_IT_Key_Issues_and_Trends_St20160220-11512-1lwykc2-with-cover-page-v2 (1).pdf:C\:\\Users\\gerco\\Zotero\\storage\\XULEF3PY\\The_2014_SIM_IT_Key_Issues_and_Trends_St20160220-11512-1lwykc2-with-cover-page-v2 (1).pdf:application/pdf},
}

@inproceedings{huysmans_integrating_2015,
	address = {Lisbon, Portugal},
	title = {Integrating {Information} {Systems} {Using} {Normalized} {Systems} {Theory}: {Four} {Case} {Studies}},
	isbn = {978-1-4673-7340-1},
	shorttitle = {Integrating {Information} {Systems} {Using} {Normalized} {Systems} {Theory}},
	url = {http://ieeexplore.ieee.org/document/7264730/},
	doi = {10.1109/CBI.2015.43},
	abstract = {New technical and business opportunities lead to the adoption of new information systems. Integrating these new systems with the existing application landscape poses many challenges, especially when legacy systems are involved. These systems may rely on completely different architectures or assumptions regarding functionality. Normalized Systems Theory addresses this issue by stating that information systems should behave as stable systems. It identiﬁes the main obstacle to achieving stability, so-called combinatorial effects, and proposes four design theorems to avoid these combinatorial effects. Based on these theorems, a set of exemplary software elements are created which can be used to generate applications. In this paper, we demonstrate the real-world usage of these software elements in legacy integration projects by describing four case studies. From a theoretical perspective, these cases validate the theorybased approach of Normalized Systems Theory. From a practical perspective, these cases demonstrate how adoption of Normalized Systems software could be approached: ﬁrst, by integrating existing systems, and second, by building future applications adhering to the theory.},
	language = {en},
	urldate = {2022-04-25},
	booktitle = {2015 {IEEE} 17th {Conference} on {Business} {Informatics}},
	publisher = {IEEE},
	author = {Huysmans, Philip and Verelst, Jan and Mannaert, Herwig and Oost, Arco},
	month = jul,
	year = {2015},
	keywords = {bib},
	pages = {173--180},
	file = {Huysmans et al. - 2015 - Integrating Information Systems Using Normalized S.pdf:C\:\\Users\\gerco\\Zotero\\storage\\UNHT9VDT\\Huysmans et al. - 2015 - Integrating Information Systems Using Normalized S.pdf:application/pdf},
}

@article{de_bruyn_enabling_2018,
	title = {Enabling {Normalized} {Systems} in {Practice} – {Exploring} a {Modeling} {Approach}},
	volume = {60},
	issn = {2363-7005, 1867-0202},
	url = {http://link.springer.com/10.1007/s12599-017-0510-4},
	doi = {10.1007/s12599-017-0510-4},
	abstract = {Contemporary organizations are required to adapt to a changing environment in an agile way, which is often deemed very challenging. Normalized Systems (NS) theory attempts to build highly evolvable software systems by using systems theory as its theoretical underpinning. A modeling method which supports the identiﬁcation of the NS elements, required for building NS sofware in practice, is currently missing. Therefore, the paper introduces an approach for creating both data models and processing models in the context of NS, as well as their integration. It is discussed how these models can be taken as the input for the actual creation of evolutionary prototypes by using an earlier developed supporting tool. The modeling approach and its suitability for feeding the tool are evaluated to discover their current strengths and weaknesses.},
	language = {en},
	number = {1},
	urldate = {2022-04-23},
	journal = {Business \& Information Systems Engineering},
	author = {De Bruyn, Peter and Mannaert, Herwig and Verelst, Jan and Huysmans, Philip},
	month = feb,
	year = {2018},
	keywords = {bib},
	pages = {55--67},
	file = {De Bruyn et al. - 2018 - Enabling Normalized Systems in Practice – Explorin.pdf:C\:\\Users\\gerco\\Zotero\\storage\\W6YXBWWG\\De Bruyn et al. - 2018 - Enabling Normalized Systems in Practice – Explorin.pdf:application/pdf},
}

@book{r_c_martin_clean_2018,
	address = {London, England},
	series = {Robert {C}. {Martin} series},
	title = {Clean architecture: a craftsman's guide to software structure and design},
	isbn = {978-0-13-449416-6},
	shorttitle = {Clean architecture},
	abstract = {Building upon the success of best-sellers The Clean Coder and Clean Code, legendary software craftsman Robert C. "Uncle Bob" Martin shows how to bring greater professionalism and discipline to application architecture and design. As with his other books, Martin's Clean Architecture doesn't merely present multiple choices and options, and say "use your best judgment": it tells you what choices to make, and why those choices are critical to your success. Martin offers direct, no-nonsense answers to key architecture and design questions like: What are the best high level structures for different kinds of applications, including web, database, thick-client, console, and embedded apps? What are the core principles of software architecture? What is the role of the architect, and what is he/she really trying to achieve? What are the core principles of software design? How do designs and architectures go wrong, and what can you do about it? What are the disciplines and practices of professional architects and designers? Clean Architecture is essential reading for every software architect, systems analyst, system designer, and software manager -- and for any programmer who aspires to these roles or is impacted by their work},
	publisher = {Prentice Hall},
	author = {Robert C. Martin},
	year = {2018},
	note = {OCLC: on1004983973},
	keywords = {bib},
	file = {Martin and Martin - 2018 - Clean architecture a craftsman's guide to softwar.pdf:C\:\\Users\\gerco\\Zotero\\storage\\AGIW5ZLH\\Martin and Martin - 2018 - Clean architecture a craftsman's guide to softwar.pdf:application/pdf},
}

@book{mannaert_normalized_2016,
	address = {Kermt},
	title = {Normalized systems theory: from foundations for evolvable software toward a general theory for evolvable design},
	isbn = {978-90-77160-09-1},
	shorttitle = {Normalized systems theory},
	language = {eng},
	publisher = {nsi-Press powered bei Koppa},
	author = {Mannaert, Herwig and Verelst, Jan and De Bruyn, Peter},
	year = {2016},
	keywords = {bib},
	file = {Mannaert et al. - 2016 - Normalized systems theory from foundations for ev.pdf:C\:\\Users\\gerco\\Zotero\\storage\\SKBV7YKY\\Mannaert et al. - 2016 - Normalized systems theory from foundations for ev.pdf:application/pdf},
}

@article{agarwal_editorialevolvable_2015,
	title = {Editorial—{Evolvable} {Systems}: {Through} the {Looking} {Glass} of {IS}},
	volume = {26},
	issn = {1047-7047, 1526-5536},
	shorttitle = {Editorial—{Evolvable} {Systems}},
	url = {http://pubsonline.informs.org/doi/10.1287/isre.2015.0595},
	doi = {10.1287/isre.2015.0595},
	language = {en},
	number = {3},
	urldate = {2022-04-23},
	journal = {Information Systems Research},
	author = {Agarwal, Ritu and Tiwana, Amrit},
	month = sep,
	year = {2015},
	keywords = {bib},
	pages = {473--479},
	file = {Agarwal and Tiwana - 2015 - Editorial—Evolvable Systems Through the Looking G.pdf:C\:\\Users\\gerco\\Zotero\\storage\\J2B2R7EY\\Agarwal and Tiwana - 2015 - Editorial—Evolvable Systems Through the Looking G.pdf:application/pdf},
}

@article{mannaert_realization_2020,
	title = {On the {Realization} of {Meta}-{Circular} {Code} {Generation} and {Two}-{Sided} {Collaborative} {Metaprogramming}},
	abstract = {The automated generation of source code is a widely adopted technique to improve the productivity of computer programming. Normalized Systems Theory (NST) aims to create software systems exhibiting a proven degree of evolvability. A software implementation exists to create skeletons of Normalized Systems (NS) applications, based on automatic code generation. This paper describes how the NS model representation, and the corresponding code generation, has been made meta-circular, and presents its detailed architecture. It is argued that this feature may be crucial to improve the productivity of metaprogramming, as it enables scalable collaboration based on two-sided interfaces. Some preliminary results from applying this approach in practice are presented and discussed.},
	language = {en},
	author = {Mannaert, Herwig and Cock, Koen De and Uhnak, Peter},
	year = {2020},
	keywords = {bib},
	pages = {11},
	file = {Mannaert et al. - 2020 - On the Realization of Meta-Circular Code Generatio.pdf:C\:\\Users\\gerco\\Zotero\\storage\\YUMTP3VB\\Mannaert et al. - 2020 - On the Realization of Meta-Circular Code Generatio.pdf:application/pdf},
}

@article{dvorak_tackling_2022,
	title = {Tackling rapid technology changes by applying enterprise engineering theories},
	volume = {215},
	issn = {01676423},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0167642321001404},
	doi = {10.1016/j.scico.2021.102747},
	language = {en},
	urldate = {2022-05-01},
	journal = {Science of Computer Programming},
	author = {Dvořák, Ondřej and Pergl, Robert},
	month = mar,
	year = {2022},
	keywords = {bib},
	pages = {102747},
	file = {Dvořák and Pergl - 2022 - Tackling rapid technology changes by applying ente.pdf:C\:\\Users\\gerco\\Zotero\\storage\\F4U6BBMP\\Dvořák and Pergl - 2022 - Tackling rapid technology changes by applying ente.pdf:application/pdf},
}

@misc{wikipedia_dont_2023,
	title = {Don't repeat yourself},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Don%27t_repeat_yourself&oldid=1146053248},
	abstract = {"Don't repeat yourself" (DRY) is a principle of software development aimed at reducing repetition of software patterns, replacing it with abstractions or using data normalization to avoid redundancy.
The DRY principle is stated as "Every piece of knowledge must have a single, unambiguous, authoritative representation within a system". The principle has been formulated by Andy Hunt and Dave Thomas in their book The Pragmatic Programmer. They apply it quite broadly to include database schemas, test plans, the build system, even documentation.  When the DRY principle is applied successfully, a modification of any single element of a system does not require a change in other logically unrelated elements. Additionally, elements that are logically related all change predictably and uniformly, and are thus kept in sync. Besides using methods and subroutines in their code, Thomas and Hunt rely on code generators, automatic build systems, and scripting languages to observe the DRY principle across layers.},
	language = {en},
	urldate = {2023-04-10},
	journal = {Wikipedia},
	author = {Wikipedia},
	month = mar,
	year = {2023},
	note = {Page Version ID: 1146053248},
	keywords = {web},
}

@misc{koks_liquidvisionspantharhei_2023,
	title = {{LiquidVisions}.{PanthaRhei}},
	copyright = {GPL-3.0},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/a80494e8ac75d17d6e2cc9a05beb0c5a51bed02d/Generator/src/PanthaRhei.Generator.Application/Boundaries/SeedingBoundary.cs},
	urldate = {2023-03-25},
	publisher = {LiquidVisions},
	author = {Koks, GC},
	month = mar,
	year = {2023},
	note = {original-date: 2022-12-31T11:30:01Z},
	keywords = {artifact},
}

@misc{wikipedia_separation_2023,
	title = {Separation of concerns},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Separation_of_concerns&oldid=1149260419},
	abstract = {In computer science, separation of concerns is a design principle for separating a computer program into distinct sections. Each section addresses a separate concern, a set of information that affects the code of a computer program. A concern can be as general as "the details of the hardware for an application", or as specific as "the name of which class to instantiate". A program that embodies SoC well is called a modular program. Modularity, and hence separation of concerns, is achieved by encapsulating information inside a section of code that has a well-defined interface. Encapsulation is a means of information hiding. Layered designs in information systems are another embodiment of separation of concerns (e.g., presentation layer, business logic layer, data access layer, persistence layer).Separation of concerns results in more degrees of freedom for some aspect of the program's design, deployment, or usage. Common among these is increased freedom for simplification and maintenance of code. When concerns are well-separated, there are more opportunities for module upgrade, reuse, and independent development. Hiding the implementation details of modules behind an interface enables improving or modifying a single concern's section of code without having to know the details of other sections and without having to make corresponding changes to those other sections. Modules can also expose different versions of an interface, which increases the freedom to upgrade a complex system in piecemeal fashion without interim loss of functionality.Separation of concerns is a form of abstraction. As with most abstractions, separating concerns means adding additional code interfaces, generally creating more code to be executed. So despite the many benefits of well-separated concerns, there is often an associated execution penalty.},
	language = {en},
	urldate = {2023-04-23},
	journal = {Wikipedia},
	author = {Wikipedia},
	month = apr,
	year = {2023},
	note = {Page Version ID: 1149260419},
	keywords = {web},
	file = {Snapshot:C\:\\Users\\gerco\\Zotero\\storage\\QZ37XTE5\\Separation_of_concerns.html:text/html},
}

@misc{wikipedia_douglas_2023,
	title = {Douglas {McIlroy}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Douglas_McIlroy&oldid=1146587956},
	abstract = {Malcolm Douglas McIlroy (born 1932) is a mathematician, engineer, and programmer. As of 2019 he is an Adjunct Professor of Computer Science at Dartmouth College.
McIlroy is best known for having originally proposed Unix pipelines and developed several Unix tools, such as spell, diff, sort, join, graph, speak, and tr. He was also one of the pioneering researchers of macro processors and programming language extensibility. He participated in the design of multiple influential programming languages, particularly PL/I, SNOBOL, ALTRAN, TMG and C++.
His seminal work on software componentization and code reuse makes him a pioneer of component-based software engineering and software product line engineering.},
	language = {en},
	urldate = {2023-04-21},
	journal = {Wikipedia},
	author = {Wikipedia},
	month = mar,
	year = {2023},
	note = {Page Version ID: 1146587956},
	keywords = {web},
	file = {Snapshot:C\:\\Users\\gerco\\Zotero\\storage\\8S4Q7ELJ\\Douglas_McIlroy.html:text/html},
}

@misc{koks_expanderpluginloaderinteractor_2023,
	title = {{ExpanderPluginLoaderInteractor}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/master-thesis-artifact/Generator/src/PanthaRhei.Generator.Application/Interactors/Initializers/ExpanderPluginLoaderInteractor.cs},
	urldate = {2023-05-01},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_requestmodels_2023,
	title = {{RequestModels}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/tree/master-thesis-artifact/PanthaRhei.Output/Output/6c6984a1-c87a-429b-b91f-2a976adb3c0e/LiquidVisions.PanthaRhei.Generated/src/Application/RequestModels/Apps},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{gupta_what_2018,
	title = {What is {REST} {API} {Versioning} and {How} to {Create} {Versions}?},
	url = {https://restfulapi.net/versioning/},
	abstract = {API versioning helps us to iterate faster when the needed changes are identified. Learn how to version an API for breaking and non-breaking changes.},
	language = {en-US},
	urldate = {2023-05-05},
	journal = {REST API Tutorial},
	author = {Gupta, Lokesh},
	month = jun,
	year = {2018},
	keywords = {web},
	file = {Snapshot:C\:\\Users\\gerco\\Zotero\\storage\\KNRPWIN9\\versioning.html:text/html},
}

@misc{wikipedia_solid_2020,
	title = {{SOLID}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://nl.wikipedia.org/w/index.php?title=SOLID&oldid=57321686},
	abstract = {SOLID (Single responsibility, Open-closed, Liskov substitution, Interface segregation and Dependency inversion) is een acroniem dat gebruikt wordt in verband met het programmeren van computers. Ze werd bedacht door Michael Feathers voor de eerste vijf principes die Robert C. Martin aangaf aan het begin van de jaren 2000 De afkorting staat voor de vijf belangrijkste principes in het object-georiënteerd programmeren. Deze principes samen maken het waarschijnlijker dat een programmeur een systeem zal maken dat duurzamer is en gemakkelijk te onderhouden of uit te breiden. De SOLID-principes maken deel uit van een meer globale strategie van agile ontwikkeling en adaptief programmeren.},
	language = {nl},
	urldate = {2023-04-28},
	journal = {Wikipedia},
	author = {Wikipedia},
	month = oct,
	year = {2020},
	note = {Page Version ID: 57321686},
	keywords = {web},
}

@misc{noauthor_law_nodate,
	title = {Law of {Demeter} ({LoD}) [{Principles} {Wiki}]},
	url = {http://principles-wiki.net/principles:law_of_demeter},
	urldate = {2023-04-10},
	keywords = {web},
	file = {Law of Demeter (LoD) [Principles Wiki]:C\:\\Users\\gerco\\Zotero\\storage\\8GY9MZBK\\principleslaw_of_demeter.html:text/html},
}

@misc{noauthor_generalization_nodate,
	title = {Generalization {Principle} ({GP}) [{Principles} {Wiki}]},
	url = {http://principles-wiki.net/principles:generalization_principle},
	urldate = {2023-04-10},
	keywords = {web},
	file = {Generalization Principle (GP) [Principles Wiki]:C\:\\Users\\gerco\\Zotero\\storage\\HHID38JP\\principlesgeneralization_principle.html:text/html},
}

@misc{noauthor_dont_nodate,
	title = {Don't {Repeat} {Yourself} ({DRY}) [{Principles} {Wiki}]},
	url = {http://principles-wiki.net/principles:don_t_repeat_yourself?s[]=dry},
	urldate = {2023-04-10},
	keywords = {web},
	file = {Don't Repeat Yourself (DRY) [Principles Wiki]:C\:\\Users\\gerco\\Zotero\\storage\\MCX7P74F\\principlesdon_t_repeat_yourself.html:text/html},
}

@misc{koks_viewmodels_2023,
	title = {{ViewModels}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/tree/master-thesis-artifact/PanthaRhei.Output/Output/6c6984a1-c87a-429b-b91f-2a976adb3c0e/LiquidVisions.PanthaRhei.Generated/src/Presentation.Api/ViewModels},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifacts},
}

@misc{koks_migrationharvesterinteractor_2023,
	title = {{MigrationHarvesterInteractor}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/master-thesis-artifact/Expanders/src/PanthaRhei.Expanders.CleanArchitecture/Harvesters/MigrationHarvesterInteractor.cs},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_imapper_2023,
	title = {{IMapper}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/master-thesis-artifact/PanthaRhei.Output/Output/6c6984a1-c87a-429b-b91f-2a976adb3c0e/LiquidVisions.PanthaRhei.Generated/src/Application/Mappers/IMapper.cs},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_uninstalldotnettemplateinteractor_2023,
	title = {{UnInstallDotNetTemplateInteractor}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Interactors/Generators/PostProcessors/UnInstallDotNetTemplateInteractor.cs},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_abstractexpander_2023,
	title = {{AbstractExpander}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Interactors/Generators/Expanders/AbstractExpander.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_abstractexpanderdependencymanagerinteractor_2023,
	title = {{AbstractExpanderDependencyManagerInteractor}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Interactors/Generators/Expanders/AbstractExpanderDependencyManagerInteractor.cs},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_appseederinteractor_2023,
	title = {{AppSeederInteractor}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Application/Interactors/Seeders/AppSeederInteractor.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_cleanarchitectureexpander_2023,
	title = {{CleanArchitectureExpander}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/tree/master-thesis-artifact/Expanders/src/PanthaRhei.Expanders.CleanArchitecture},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_codegeneratorinteractor_2023,
	title = {{CodeGeneratorInteractor}},
	copyright = {GPL-3.0},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Application/Interactors/Generators/CodeGeneratorInteractor.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_componentviewmodel_2023,
	title = {{ComponentViewModel}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/PanthaRhei.Output/Output/6c6984a1-c87a-429b-b91f-2a976adb3c0e/LiquidVisions.PanthaRhei.Generated/src/Presentation.Api/ViewModels/ComponentViewModel.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_crudgateways_2023,
	title = {{CRUDGateways}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/tree/master-thesis-artifact/Generator/src/PanthaRhei.Generator.Domain/Gateways},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_deletecomponentcommand_2023,
	title = {{DeleteComponentCommand}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/PanthaRhei.Output/Output/6c6984a1-c87a-429b-b91f-2a976adb3c0e/LiquidVisions.PanthaRhei.Generated/src/Application/RequestModels/Components/DeleteComponentCommand.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_expandentitieshandlerinteractor_2023,
	title = {{ExpandEntitiesHandlerInteractor}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Expanders/src/PanthaRhei.Expanders.CleanArchitecture/Handlers/Domain/ExpandEntitiesHandlerInteractor.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_genericrepository_2023,
	title = {{GenericRepository}},
	copyright = {GPL-3.0},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Infrastructure.EntityFramework/Repositories/GenericRepository.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_harvestrepository_2023,
	title = {{HarvestRepository}},
	copyright = {GPL-3.0},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Infrastructure/HarvestRepository.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_icommandlineinteractor_2023,
	title = {{ICommandLineInteractor}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Interactors/ICommandLineInteractor.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_icreategateway_2023,
	title = {{ICreateGateway}},
	copyright = {GPL-3.0},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Gateways/ICreateGateway.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_iexecutioninteractor_2023,
	title = {{IExecutionInteractor}},
	copyright = {GPL-3.0},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Interactors/Generators/IExecutionInteractor.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_iexpanderinteractor_2023,
	title = {{IExpanderInteractor}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Interactors/Generators/Expanders/IExpanderInteractor.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_iexpanderhandlerinteractor_2023,
	title = {{IExpanderHandlerInteractor}},
	copyright = {GPL-3.0},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Interactors/Generators/IExpanderHandlerInteractor.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_igetgateway_2023,
	title = {{IGetGateway}},
	copyright = {GPL-3.0},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Gateways/IGetGateway.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_iharvesterinteractor_2023,
	title = {{IHarvesterInteractor}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Interactors/Generators/Harvesters/IHarvesterInteractor.cs},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_ilogger_2023,
	title = {{ILogger}},
	copyright = {GPL-3.0},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Logging/ILogger.cs},
	journal = {GitHub},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_installdotnettemplateinteractor_2023,
	title = {{InstallDotNetTemplateInteractor}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Interactors/Generators/Preprocessors/InstallDotNetTemplateInteractor.cs},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@misc{koks_irejuvenatorinteractor_2023,
	title = {{IRejuvenatorInteractor}},
	url = {https://github.com/LiquidVisions/LiquidVisions.PanthaRhei/blob/9687c96eb368d96201d4baa66b1b0536cb90c12c/Generator/src/PanthaRhei.Generator.Domain/Interactors/Generators/Rejuvenator/IRejuvenatorInteractor.cs},
	author = {Koks, GC},
	year = {2023},
	keywords = {artifact},
}

@article{geisler_effect_1976,
	title = {The effect of lithium on unstimulated and glucagon-stimulated urinary cycle {AMP} excretion in rat and man},
	volume = {38},
	issn = {0001-6683},
	doi = {10.1111/j.1600-0773.1976.tb03139.x},
	language = {eng},
	number = {5},
	journal = {Acta Pharmacologica Et Toxicologica},
	author = {Geisler, A. and Vendsborg, P. B. and Johannesen, M. and Klysner, R. and Thomsen, J.},
	month = may,
	year = {1976},
	pmid = {183461},
	keywords = {Animals, Clinical Trials as Topic, Cyclic AMP, Drug Interactions, Female, Glucagon, Humans, Lithium, Male, Rats, Time Factors},
	pages = {433--439},
}

@article{austen_identification_1976,
	title = {Identification of a functional arginine residue involved in coenzyme binding by the {NADP}-specific glutamate dehydrogenase of {Neurospora}},
	volume = {251},
	issn = {0021-9258},
	abstract = {The NADP-specific glutamate dehydrogenase (EC 1.4.1.4) of Neurospora crassa is inhibited by reaction with 1,2-cyclohexanedione which binds to arginine residues. With the 14C-labeled reagent, a peptide was isolated with the sequence: Gly-Gly-Leu-Arg-Leu-His-Pro-Ser-Val-Asn-Leu, corresponding to residues 78 through 88 in the protein. The arginine, residue 81, was present as N7,N8-(1,2-dihydroxycyclohex-1,2-ylene)-arginyl (or DHCH-arginine). Present evidence indicates that this arginine residue resides at or near the nicotinamide binding domain of the enzyme. Similar sequences are present in the bovine liver enzyme (EC 1.4.1.3) and the NAD-specific glutamate dehydrogenase of Neurospora (EC 1.4.1.2).},
	language = {eng},
	number = {18},
	journal = {The Journal of Biological Chemistry},
	author = {Austen, B. M. and Smith, E. L.},
	month = sep,
	year = {1976},
	pmid = {9404},
	keywords = {Amino Acid Sequence, Amino Acids, Arginine, Binding Sites, Glutamate Dehydrogenase, NADP, Neurospora, Neurospora crassa, Protein Binding, Species Specificity},
	pages = {5835--5837},
}

@book{van_nuffel_towards_2011,
	title = {Towards designing modular and evolvable business processes},
	isbn = {90-8994-040-5},
	publisher = {University of Antwerp},
	author = {van Nuffel, Dieter},
	year = {2011},
	keywords = {bib},
}

@book{van_nuffel_towards_2011-1,
	title = {Towards designing modular and evolvable business processes},
	isbn = {90-8994-040-5},
	publisher = {University of Antwerp},
	author = {van Nuffel, Dieter},
	year = {2011},
	keywords = {bib},
}

@phdthesis{haerens_evolvability_2021,
	type = {{PhD} {Thesis}},
	title = {On the evolvability of the {TCP}-{IP} based network firewall rule base},
	url = {https://hdl.handle.net/10067/1834610151162165141},
	urldate = {2024-03-24},
	abstract = {A firewall is an essential network security component. The firewall rule base, the list of filters to be applied on network traffic, can have significant evolvability issues in a context where companies consider their firewall as complex. While sufficient literature exists on how to analyze a rule base, little research is available on how to properly construct a rule base upfront which prevents the occurrence of evolvability issues. According to Normalized Systems theory, a system is unstable under change if changes require an effort that is proportional to the type of change and the size of the system. A system that is unstable under change is considered non-evolvable. The issue with firewall changes relates to this instability under change. By analyzing the root cause of the evolvability issues and proposing design criteria making use of Normalized Systems theory, we attempt to solve the evolvability issues of TCP/IP-based firewalls. This work presents a set of design criteria to create an exante proven evolvable rule base, as well as an algorithm which performs an essential step in converting an existing non-evolvable rule base into an evolvable rule base.},
	language = {eng},
	school = {Antwerp University},
	author = {Haerens, Geert},
	year = {2021},
	keywords = {bib},
}

@phdthesis{van_nuffel_towards_2011-2,
	type = {{PhD} {Thesis}},
	title = {Towards designing modular and evolvable business processes},
	url = {https://hdl.handle.net/10067/895360151162165141},
	language = {eng},
	school = {Universiteit Antwerpen, Faculteit TEW},
	author = {van Nuffel, Dieter},
	year = {2011},
	note = {ISBN: 978-90-8994-040-7},
	keywords = {bib},
}

@phdthesis{koks_convergence_2023,
	title = {On the {Convergence} of {Clean} {Architecture} with the {Normalized} {Systems} {Theorems}},
	copyright = {Creative Commons Attribution 4.0 International, Open Access},
	url = {https://zenodo.org/record/8029971},
	abstract = {A Design Science approach of stability, evolvability, and modularity on a C\# software artifact.},
	language = {en},
	urldate = {2024-03-24},
	author = {Koks, Gerco},
	month = jun,
	year = {2023},
	keywords = {bib},
}